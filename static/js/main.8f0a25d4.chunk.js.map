{"version":3,"sources":["components/Slider/slider.module.scss","components/Slider/unnamed1.jpg","components/Body/body.module.scss","components/header/header.module.scss","components/header/logo.png","components/Slider/unnamed.jpg","components/Footer/footer.module.scss","components/header/index.js","components/Slider/index.js","components/Body/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","styles","container","src","logo","alt","text","AutoplaySlider","withAutoplay","AwesomeSlider","Slaider","prop","play","cancelOnInteraction","interval","img","img1","AboutUs","header","body","Footer","style","App","Slider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,UAAY,4B,gBCD9BD,EAAOC,QAAU,IAA0B,sC,gBCC3CD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,OAAS,qBAAqB,KAAO,qB,gBCA3FD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,uB,mBCD/DD,EAAOC,QAAU,IAA0B,kC,iBCA3CD,EAAOC,QAAU,IAA0B,qC,iBCC3CD,EAAOC,QAAU,CAAC,UAAY,4B,4LCkBfC,EAdA,WAGX,OAEI,yBAAKC,UAAWC,IAAOC,WACf,yBAAKC,IAAKC,IAAMC,IAAI,SACpB,wBAAIL,UAAYC,IAAOK,MAAvB,gO,yFCLVC,E,MAAiBC,GAAaC,KA0BrBC,EAtBE,SAACC,GAElB,OACE,yBAAKX,UAAaC,IAAOC,WACvB,2HACA,kBAACK,EAAD,CACAK,MAAM,EACNC,qBAAqB,EACrBC,SAAU,KAEV,yBAAKd,UAAWC,IAAOC,WAAW,yBAAKC,IAAKY,OAC5C,yBAAKf,UAAWC,IAAOC,WAAW,yBAAKC,IAAKa,OAC5C,yBAAKhB,UAAWC,IAAOC,WAAW,yBAAKC,IAAKa,OAC5C,yBAAKhB,UAAWC,IAAOC,WAAW,yBAAKC,IAAKa,U,gBCQjCC,EA5BC,WAEZ,OACE,oCACE,yBAAKjB,UAAWC,IAAOC,WACrB,wBAAIF,UAAWC,IAAOiB,QAAtB,6BACA,uBAAGlB,UAAWC,IAAOkB,MAArB,2iH,iBCuBKC,EA5BA,WAEX,OAEA,6BACI,6BACA,8HACJ,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BAAK,6BACL,6BAAK,6BAAK,6BAAK,6BAAK,6BAAK,6BAAK,6BAC1B,yBAAKpB,UAAWqB,IAAMnB,WACtB,iIACA,sHACA,8DACA,+GACA,gCCPOoB,MAXf,WACE,OACE,oCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACC,EAAD,MACA,kBAAC,EAAD,QCDgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8f0a25d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"slider_container__5n724\"};","module.exports = __webpack_public_path__ + \"static/media/unnamed1.3f1913ad.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"body_container__1RSP8\",\"header\":\"body_header__2aB9O\",\"body\":\"body_body__3TGJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__Sk6Cc\",\"text\":\"header_text__3Q4ad\"};","module.exports = __webpack_public_path__ + \"static/media/logo.0b1e5c66.png\";","module.exports = __webpack_public_path__ + \"static/media/unnamed.e37f9c73.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"footer_container__Yn8Zy\"};","import React from 'react';\nimport styles from './header.module.scss'\nimport logo from './logo.png';\n\n\nconst Header = ()=>{\n\n\n    return (\n        \n        <div className={styles.container}>\n                <img src={logo} alt=\"Logo\"/>\n                <h1 className ={styles.text}>ПІВДЕНННОУКРАЇНЬСКА ВИРОБНИЧА КОМПАНІЯ</h1>\n        </div>\n        \n    )\n}\n\n\nexport default Header;","import AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\nimport styles from './slider.module.scss';\nimport React from 'react';\nimport img from './unnamed.jpg';\nimport img1 from './unnamed1.jpg';\nimport withAutoplay from 'react-awesome-slider/dist/autoplay'\nconst AutoplaySlider = withAutoplay(AwesomeSlider);\n\n\n\nconst  Slaider = (prop)=>{\n\nreturn (\n  <div className = {styles.container}>\n    <h1>Пример продукции</h1>\n    <AutoplaySlider\n    play={true}\n    cancelOnInteraction={false} \n    interval={4000}\n  >\n    <div className={styles.container}><img src={img}/></div>\n    <div className={styles.container}><img src={img1}/></div>\n    <div className={styles.container}><img src={img1}/></div>\n    <div className={styles.container}><img src={img1}/></div>\n  </AutoplaySlider>\n  </div>\n)\n\n\n}\n\n\nexport default Slaider","import React from 'react';\nimport styles from './body.module.scss';\n\n\nconst AboutUs = ()=>{\n\n    return (\n      <>\n        <div className={styles.container}>\n          <h1 className={styles.header}>О нас</h1>\n          <p className={styles.body}>\n            Давно выяснено, что при оценке дизайна и композиции читаемый текст\n            мешает сосредоточиться. Lorem Ipsum используют потому, что тот\n            обеспечивает более или менее стандартное заполнение шаблона, а также\n            реальное распределение букв и пробелов в абзацах, которое не\n            получается при простой дубликации \"Здесь ваш текст.. Здесь ваш\n            текст.. Здесь ваш текст..\" Многие программы электронной вёрстки и\n            редакторы HTML используют Lorem Ipsum в качестве текста по\n            умолчанию, так что поиск по ключевым словам \"lorem ipsum\" сразу\n            показывает, как много веб-страниц всё ещё дожидаются своего\n            настоящего рождения. За прошедшие годы текст Lorem Ipsum получил\n            много версий. Некоторые версии появились по ошибке, некоторые -\n            намеренно (например, юмористические варианты\n          </p>\n        </div>\n      </>\n    );\n\n};\n\n\n\nexport default AboutUs;\n\n\n\n\n\n\n","import React from 'react';\nimport style from './footer.module.scss';\n\n\n\nconst Footer = ()=>{\n\n    return (\n\n    <div>\n        <br/>\n        <h1>Цены на продукцию  </h1>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/><br/>\n    <br/><br/><br/><br/><br/><br/><br/>\n        <div className={style.container}>\n        <h3>Название компании</h3>\n        <h3>Связяться с нами</h3>\n        <h3>Адрес</h3>\n        <h3>Номер телефона</h3>\n        <h3></h3>\n        </div>\n        \n    </div>\n    )\n}\n\n\nexport default Footer;","import React from 'react';\nimport Header from './components/header/index';\nimport './App.css';\nimport Slider from './components/Slider/index';\nimport AboutUs from'./components/Body/index';\nimport Footer from'./components/Footer/index';\n\nfunction App() {\n  return (\n    <>\n    <Header/>\n    <AboutUs/>\n    <Slider/>\n    <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}